// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import ObjectiveC;
@import CoreGraphics;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

SWIFT_PROTOCOL("_TtP11DragDropiOS9Droppable_")
@protocol Droppable <NSObject>
- (BOOL)canDropWithDragInfo:(id _Nonnull)dragInfo inRect:(CGRect)rect;
- (id _Nullable)dropOverInfoInRect:(CGRect)rect;
@optional
- (void)dropOutside:(id _Nonnull)dragInfo inRect:(CGRect)rect;
- (void)willMoveItem:(id _Nonnull)item inRect:(CGRect)rect;
- (void)didMoveItem:(id _Nonnull)item inRect:(CGRect)rect;
- (void)didMoveOutItem:(id _Nonnull)item;
@required
- (void)dropComplete:(id _Nonnull)dragInfo dropInfo:(id _Nullable)dropInfo atRect:(CGRect)atRect;
@optional
- (void)checkFroEdgesAndScroll:(id _Nonnull)item inRect:(CGRect)rect;
- (void)stopDropping;
@end

@class UIView;

SWIFT_PROTOCOL("_TtP11DragDropiOS9Draggable_")
@protocol Draggable <NSObject>
@optional
- (void)touchBeginAtPoint:(CGPoint)point;
@required
- (BOOL)canDragAtPoint:(CGPoint)point;
- (UIView * _Nullable)representationImageAtPoint:(CGPoint)point;
- (id _Nullable)dragInfoAtPoint:(CGPoint)point;
- (void)dragComplete:(id _Nonnull)dragInfo dropInfo:(id _Nullable)dropInfo;
@optional
- (void)stopDragging;
@end

@class NSCoder;
@protocol DragDropCollectionViewDelegate;
@class UICollectionViewLayout;

SWIFT_CLASS("_TtC11DragDropiOS22DragDropCollectionView")
@interface DragDropCollectionView : UICollectionView <Draggable, Droppable>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) id <DragDropCollectionViewDelegate> _Nullable dragDropDelegate;
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (BOOL)canDragAtPoint:(CGPoint)point;
- (UIView * _Nullable)representationImageAtPoint:(CGPoint)point;
- (id _Nullable)dragInfoAtPoint:(CGPoint)point;
- (void)touchBeginAtPoint:(CGPoint)point;
- (void)stopDragging;
- (void)dragComplete:(id _Nonnull)dragInfo dropInfo:(id _Nullable)dropInfo;
- (BOOL)canDropWithDragInfo:(id _Nonnull)item inRect:(CGRect)rect;
- (id _Nullable)dropOverInfoInRect:(CGRect)rect;
- (void)dropOutside:(id _Nonnull)dragInfo inRect:(CGRect)rect;
- (void)stopDropping;
- (void)checkFroEdgesAndScroll:(id _Nonnull)item inRect:(CGRect)rect;
- (void)dropComplete:(id _Nonnull)dragInfo dropInfo:(id _Nullable)dropInfo atRect:(CGRect)rect;
@end

@class UIImage;

SWIFT_PROTOCOL("_TtP11DragDropiOS30DragDropCollectionViewDelegate_")
@protocol DragDropCollectionViewDelegate <NSObject>
@optional
- (NSIndexPath * _Nullable)collectionView:(UICollectionView * _Nonnull)collectionView indexPathForDragInfo:(id _Nonnull)dragInfo;
@required
- (id _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView dragInfoForIndexPath:(NSIndexPath * _Nonnull)indexPath;
@optional
- (UIImage * _Nullable)collectionView:(UICollectionView * _Nonnull)collectionView representationImageAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@required
- (void)collectionView:(UICollectionView * _Nonnull)collectionView touchBeginAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView canDragAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView dragCompleteWithDragInfo:(id _Nonnull)dragInfo atDragIndexPath:(NSIndexPath * _Nonnull)dragIndexPath withDropInfo:(id _Nullable)dropInfo;
- (void)collectionViewStopDragging:(UICollectionView * _Nonnull)collectionView;
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView canDropWithDragInfo:(id _Nonnull)info AtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@optional
- (void)collectionView:(UICollectionView * _Nonnull)collectionView dropOutsideWithDragInfo:(id _Nonnull)info;
@required
- (void)collectionView:(UICollectionView * _Nonnull)collectionView dropCompleteWithDragInfo:(id _Nonnull)dragInfo atDragIndexPath:(NSIndexPath * _Nullable)dragIndexPath withDropInfo:(id _Nullable)dropInfo atDropIndexPath:(NSIndexPath * _Nonnull)dropIndexPath;
- (void)collectionViewStopDropping:(UICollectionView * _Nonnull)collectionView;
@end

@class UIGestureRecognizer;
@class UITouch;
@class UILongPressGestureRecognizer;

SWIFT_CLASS("_TtC11DragDropiOS15DragDropManager")
@interface DragDropManager : NSObject <UIGestureRecognizerDelegate>
- (nonnull instancetype)initWithCanvas:(UIView * _Nonnull)canvas views:(NSArray<UIView *> * _Nonnull)views OBJC_DESIGNATED_INITIALIZER;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch;
- (void)updateForLongPress:(UILongPressGestureRecognizer * _Nonnull)recognizer;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end



#pragma clang diagnostic pop
